<?xml version="1.0" encoding="UTF-8"?>
<api context="/healthcare" name="HealthcareAPI" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST" uri-template="/categories/{category}/reserve">
        <inSequence>
            <property description="Hospital" expression="json-eval($.hospital)" name="Hospital" scope="default" type="STRING"/>
            <switch source="get-property('Hospital')">
                <case regex="grand oak community hospital">
                    <log description="Grand Oka Log" level="custom">
                        <property expression="fn:concat('Routing to ', get-property('Hospital'))" name="Message"/>
                    </log>
                    <send>
                        <endpoint key="GrandOakEP"/>
                    </send>
                </case>
                <case regex="clemency medical center">
                    <log description="Clemency Log" level="custom">
                        <property expression="fn:concat('Routing to ', get-property('Hospital'))" name="Message"/>
                    </log>
                </case>
                <case regex="pine valley community hospital">
                    <log description="Pine Valley Log" level="custom">
                        <property expression="fn:concat('Routing to ', get-property('Hospital'))" name="Message"/>
                    </log>
                </case>
                <default>
                    <log description="Invalid Log" level="custom">
                        <property expression="fn:concat('Invalid Hospital ', get-property('Hospital'))" name="Message"/>
                    </log>
                    <drop description="drop"/>
                </default>
            </switch>
        </inSequence>
        <outSequence>
            <send/>
        </outSequence>
        <faultSequence/>
    </resource>
    <resource methods="POST" uri-template="/categories/{category}/reserve1">
        <inSequence>
            <property description="Hospital" expression="json-eval($.hospital)" name="Hospital" scope="default" type="STRING"/>
            <property description="Card Number" expression="json-eval($.cardNo)" name="card_number" scope="default" type="STRING"/>
            <datamapper config="gov:datamapper/transformRequest.dmc" description="transform" inputSchema="gov:datamapper/transformRequest_inputSchema.json" inputType="JSON" outputSchema="gov:datamapper/transformRequest_outputSchema.json" outputType="JSON"/>
            <switch source="get-property('Hospital')">
                <case regex="grand oak community hospital">
                    <log description="Grand Oka Log" level="custom">
                        <property expression="fn:concat('Routing to ', get-property('Hospital'))" name="Message"/>
                    </log>
                    <property description="set hospital" name="uri.var.hospital" scope="default" type="STRING" value="grandoaks"/>
                    <call>
                        <endpoint key="GrandOakEP"/>
                    </call>
                </case>
                <case regex="clemency medical center">
                    <log description="Clemency Log" level="custom">
                        <property expression="fn:concat('Routing to ', get-property('Hospital'))" name="Message"/>
                    </log>
                </case>
                <case regex="pine valley community hospital">
                    <log description="Pine Valley Log" level="custom">
                        <property expression="fn:concat('Routing to ', get-property('Hospital'))" name="Message"/>
                    </log>
                </case>
                <default>
                    <log description="Invalid Log" level="custom">
                        <property expression="fn:concat('Invalid Hospital ', get-property('Hospital'))" name="Message"/>
                    </log>
                    <drop description="drop"/>
                </default>
            </switch>
            <property description="AppointmentNumber" expression="json-eval($.appointmentNumber)" name="uri.var.appointment_id" scope="default" type="STRING"/>
            <property description="doctor_details" expression="json-eval($.doctor)" name="doctor_details" scope="default" type="STRING"/>
            <property description="patient_details" expression="json-eval($.patient)" name="patient_details" scope="default" type="STRING"/>
            <call>
                <endpoint key="ChannelingFeeEP"/>
            </call>
            <property description="actual_fee" expression="json-eval($.actualFee)" name="actual_fee" scope="default" type="STRING"/>
            <payloadFactory description="payload" media-type="json">
                <format>{"appointmentNumber":$1,"doctor":$2,"patient":$3,"fee":$4,"confirmed":"false","card_number":"$5"}
				</format>
                <args>
                    <arg evaluator="xml" expression="$ctx:uri.var.appointment_id"/>
                    <arg evaluator="xml" expression="$ctx:doctor_details"/>
                    <arg evaluator="xml" expression="$ctx:patient_details"/>
                    <arg evaluator="xml" expression="$ctx:actual_fee"/>
                    <arg evaluator="xml" expression="$ctx:card_number"/>
                </args>
            </payloadFactory>
            <call>
                <endpoint key="SettlePaymentEP"/>
            </call>
            <respond description="respond"/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="POST" uri-template="/v1/categories/{category}/reserve">
        <inSequence>
            <property description="Transform" name="Transform" scope="default" type="STRING" value="Yes"/>
            <datamapper config="gov:datamapper/transformRequest.dmc" description="transform" inputSchema="gov:datamapper/transformRequest_inputSchema.json" inputType="JSON" outputSchema="gov:datamapper/transformRequest_outputSchema.json" outputType="JSON"/>
            <property description="Hospital" expression="json-eval($.hospital)" name="Hospital" scope="default" type="STRING"/>
            <switch source="get-property('Hospital')">
                <case regex="grand oak community hospital">
                    <log description="Grand Oka Log" level="custom">
                        <property expression="fn:concat('Routing to ', get-property('Hospital'))" name="Message"/>
                    </log>
                    <send>
                        <endpoint key="GrandOakEP"/>
                    </send>
                </case>
                <case regex="clemency medical center">
                    <log description="Clemency Log" level="custom">
                        <property expression="fn:concat('Routing to ', get-property('Hospital'))" name="Message"/>
                    </log>
                </case>
                <case regex="pine valley community hospital">
                    <log description="Pine Valley Log" level="custom">
                        <property expression="fn:concat('Routing to ', get-property('Hospital'))" name="Message"/>
                    </log>
                </case>
                <default>
                    <log description="Invalid Log" level="custom">
                        <property expression="fn:concat('Invalid Hospital ', get-property('Hospital'))" name="Message"/>
                    </log>
                    <drop description="drop"/>
                </default>
            </switch>
        </inSequence>
        <outSequence>
            <send/>
        </outSequence>
        <faultSequence/>
    </resource>
</api>
